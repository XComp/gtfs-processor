buildscript {
	ext {
		lombokVersion = '1.18.12'
		springBootVersion = '2.2.6.RELEASE'
		sparkVersion = '2.4.5'
		scalaVersion = '2.12'
		junitVersion = '5.6.1'
	}
}

plugins {
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'base'
	id 'java'
	id 'application'
	id 'idea'
	id 'com.avast.gradle.docker-compose' version '0.9.4'
}

allprojects {

	group = 'com.mapohl'
	version = '0.0.1-SNAPSHOT'

	sourceCompatibility = '1.8'
	targetCompatibility = '1.8'

	apply plugin: 'java'
	apply plugin: 'application'
	apply plugin: 'groovy'
	apply plugin: 'java-library'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'org.springframework.boot'

	repositories {
		mavenCentral()
	}

	configurations {
		developmentOnly
		runtimeClasspath {
			extendsFrom developmentOnly
		}
		compileOnly {
			extendsFrom annotationProcessor
		}
	}
}

subprojects {

	dependencyManagement {
		imports {
			mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
			mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR1'
		}
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-actuator'
		implementation 'org.springframework.cloud:spring-cloud-stream'
		implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
		implementation 'org.springframework.kafka:spring-kafka'

		compile group: 'com.google.guava', name: 'guava', version: '28.2-jre'
		compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'

		compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
		annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

		developmentOnly 'org.springframework.boot:spring-boot-devtools'
		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
		testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'
		testImplementation 'org.springframework.kafka:spring-kafka-test'

		testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVersion
		testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion
	}

	test {
		useJUnitPlatform()
	}
}

project(':stops-loader') {
	jar.archiveBaseName = 'stops-loader'
}

project(':dummy-producer') {
	jar.archiveBaseName = 'dummy-producer'
}

project(':dummy-consumer') {
	jar.archiveBaseName = 'dummy-consumer'
}

dockerCompose {
	// captureContainersOutput = true
	captureContainersOutput = false
	stopContainers = true
	removeContainers = true
	removeImages = "Local"
	removeVolumes = true
	removeOrphans = true
	forceRecreate = true
	waitForTcpPorts = false
	projectName = project.name
}

project.subprojects.each { subProject ->
	subProject.test.dependsOn composeUp
	subProject.test.finalizedBy composeDown
}
