jar.archiveBaseName = 'taxiride'

dependencies {
    implementation project(':common')
    implementation project(':common-producer')

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.kafka:spring-kafka'

    annotationProcessor group: 'org.projectlombok', name: 'lombok'

    implementation group: 'com.google.guava', name: 'guava'
    implementation group: 'org.apache.commons', name: 'commons-lang3'
    implementation group: 'info.picocli', name: 'picocli'

    testImplementation testFixtures(project(':common'))
    testImplementation group: 'com.google.guava', name: 'guava'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation group: 'org.springframework.kafka', name: 'spring-kafka-test'
}

def defaultSpringConfiguration = "TaxiRideProducer"
def springConfigurations = [
        "taxiRide"     : "TaxiRideProducer",
        "taxiRideStart": "TaxiRideStartProducer",
]

springBoot.mainClassName = "com.mapohl.nyckafka.taxiride.${defaultSpringConfiguration}"
springConfigurations.each { prop, mainClassName ->
    if (project.hasProperty(prop))
        springBoot.mainClassName = "com.mapohl.nyckafka.taxiride.${mainClassName}"
}

